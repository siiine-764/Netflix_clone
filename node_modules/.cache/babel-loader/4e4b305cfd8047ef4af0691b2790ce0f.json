{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/pages/SigninPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport firebase from '../lib/firebase.prod';\nimport HeaderWrapper from '../components/Header/HeaderWrapper';\nimport Navbar from '../components/Header/Navbar';\nimport Logo from '../components/Header/Logo';\nimport FooterCompound from '../compounds/FooterCompound';\nimport SignFormWrapper from '../components/SignForm/SignFormWrapper';\nimport SignFormBase from '../components/SignForm/SignFormBase';\nimport SignFormTitle from '../components/SignForm/SignFormTitle';\nimport SignFormInput from '../components/SignForm/SignFormInput';\nimport SignFormButton from '../components/SignForm/SignFormButton';\nimport SignFormText from '../components/SignForm/SignFormText';\nimport SignFormLink from '../components/SignForm/SignFormLink';\nimport SignFormCaptcha from '../components/SignForm/SignFormCaptcha';\nimport SignFormError from '../components/SignForm/SignFormError';\nimport Warning from '../components/Feature/Warning';\n/*---> Component <---*/\n\nconst SigninPage = () => {\n  _s();\n\n  const [emailAddress, setEmailAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const IsInvalid = password === '' || emailAddress === '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    firebase.auth().signInWithEmailAndPassword(emailAddress, password).then(() => {\n      setEmailAddress('');\n      setPassword('');\n      setError('');\n      history.push('/browse');\n    }).catch(error => setError(error.message));\n  };\n\n  const handleSignupClick = () => {\n    history.push('/signup');\n    const HeaderElement = document.getElementById('header');\n    HeaderElement === null || HeaderElement === void 0 ? void 0 : HeaderElement.scrollIntoView();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignFormWrapper, {\n        children: /*#__PURE__*/_jsxDEV(SignFormBase, {\n          onSubmit: handleSubmit,\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(Warning, {\n            children: \"NOT official Netflix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignFormTitle, {\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), error ? /*#__PURE__*/_jsxDEV(SignFormError, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 22\n          }, this) : null, /*#__PURE__*/_jsxDEV(SignFormInput, {\n            type: \"text\",\n            placeholder: \"Email Address\",\n            value: emailAddress,\n            onChange: ({\n              target\n            }) => setEmailAddress(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignFormInput, {\n            type: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"off\",\n            value: password,\n            onChange: ({\n              target\n            }) => setPassword(target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignFormButton, {\n            disabled: IsInvalid,\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignFormText, {\n            children: [\"New to Netflix?\", /*#__PURE__*/_jsxDEV(SignFormLink, {\n              onClick: handleSignupClick,\n              children: \"Sign up now.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SignFormCaptcha, {\n            children: \"This page is protected by Google reCAPTCHA to ensure you are not a bot.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterCompound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SigninPage, \"6VMMq16AHuEzouD56qbxx1jTmwo=\", false, function () {\n  return [useHistory];\n});\n\n_c = SigninPage;\nexport default SigninPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SigninPage\");","map":{"version":3,"sources":["/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/pages/SigninPage.tsx"],"names":["React","useState","useHistory","firebase","HeaderWrapper","Navbar","Logo","FooterCompound","SignFormWrapper","SignFormBase","SignFormTitle","SignFormInput","SignFormButton","SignFormText","SignFormLink","SignFormCaptcha","SignFormError","Warning","SigninPage","emailAddress","setEmailAddress","password","setPassword","error","setError","history","IsInvalid","handleSubmit","event","preventDefault","auth","signInWithEmailAndPassword","then","push","catch","message","handleSignupClick","HeaderElement","document","getElementById","scrollIntoView","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport firebase from '../lib/firebase.prod'\nimport HeaderWrapper from '../components/Header/HeaderWrapper'\nimport Navbar from '../components/Header/Navbar'\nimport Logo from '../components/Header/Logo'\nimport FooterCompound from '../compounds/FooterCompound'\nimport SignFormWrapper from '../components/SignForm/SignFormWrapper'\nimport SignFormBase from '../components/SignForm/SignFormBase'\nimport SignFormTitle from '../components/SignForm/SignFormTitle'\nimport SignFormInput from '../components/SignForm/SignFormInput'\nimport SignFormButton from '../components/SignForm/SignFormButton'\nimport SignFormText from '../components/SignForm/SignFormText'\nimport SignFormLink from '../components/SignForm/SignFormLink'\nimport SignFormCaptcha from '../components/SignForm/SignFormCaptcha'\nimport SignFormError from '../components/SignForm/SignFormError'\nimport Warning from '../components/Feature/Warning'\n\n/*---> Component <---*/\nconst SigninPage = () => {\n  const [emailAddress, setEmailAddress] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const history = useHistory()\n\n  const IsInvalid = password === '' || emailAddress === ''\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault()\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(emailAddress, password)\n      .then(() => {\n        setEmailAddress('')\n        setPassword('')\n        setError('')\n        history.push('/browse')\n      })\n      .catch((error: Error) => setError(error.message))\n  }\n\n  const handleSignupClick = () => {\n    history.push('/signup')\n    const HeaderElement: HTMLElement | null = document.getElementById('header')\n    HeaderElement?.scrollIntoView()\n  }\n\n  return (\n    <>\n      <HeaderWrapper>\n        <Navbar>\n          <Logo />\n        </Navbar>\n        <SignFormWrapper>\n          <SignFormBase onSubmit={handleSubmit} method='POST'>\n            <Warning>NOT official Netflix</Warning>\n            <SignFormTitle>Sign in</SignFormTitle>\n            {error ? <SignFormError>{error}</SignFormError> : null}\n            <SignFormInput\n              type='text'\n              placeholder='Email Address'\n              value={emailAddress}\n              onChange={({ target }) => setEmailAddress(target.value)}\n            />\n            <SignFormInput\n              type='password'\n              placeholder='Password'\n              autoComplete='off'\n              value={password}\n              onChange={({ target }) => setPassword(target.value)}\n            />\n            <SignFormButton disabled={IsInvalid} type='submit'>\n              Sign In\n            </SignFormButton>\n            <SignFormText>\n              New to Netflix?\n              <SignFormLink onClick={handleSignupClick}>\n                Sign up now.\n              </SignFormLink>\n            </SignFormText>\n            <SignFormCaptcha>\n              This page is protected by Google reCAPTCHA to ensure you are not a\n              bot.\n            </SignFormCaptcha>\n          </SignFormBase>\n        </SignFormWrapper>\n      </HeaderWrapper>\n      <FooterCompound />\n    </>\n  )\n}\n\nexport default SigninPage\n"]},"metadata":{},"sourceType":"module"}