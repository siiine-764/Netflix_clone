{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/pages/BrowsePage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BrowseHeaderWrapper from '../components/Header/BrowseHeaderWrapper';\nimport BrowseNavbar from '../components/Header/BrowseNavbar';\nimport Logo from '../components/Header/Logo';\nimport FeatureWrapperBrowse from '../components/Feature/FeatureWrapperBrowse';\nimport FeatureTitleBrowse from '../components/Feature/FeatureTitleBrowse';\nimport FeatureSubTitleBrowse from '../components/Feature/FeatureSubTitleBrowse';\nimport PlayButton from '../components/Header/PlayButton';\nimport HeaderLink from '../components/Header/HeaderLink';\nimport AllSlidesWrapper from '../components/Movies/AllSlidesWrapper';\nimport SlideWrapper from '../components/Movies/SlideWrapper';\nimport SlideTitle from '../components/Movies/SlideTitle';\nimport AllCardsWrapper from '../components/Movies/AllCardsWrapper';\nimport CardWrapper from '../components/Movies/CardWrapper';\nimport CardImage from '../components/Movies/CardImage';\nimport CardTitle from '../components/Movies/CardTitle';\nimport CardDescription from '../components/Movies/CardDescription';\nimport CardFeatureWrapper from '../components/Movies/CardFeatureWrapper';\nimport CardFeatureClose from '../components/Movies/CardFeatureClose';\nimport PlayerVideo from '../components/Movies/PlayerVideo';\nimport PlayerOverlay from '../components/Movies/PlayerOverlay';\nimport FooterCompound from '../compounds/FooterCompound';\nimport Loader from 'react-loader-spinner';\nimport SpinnerWrapper from '../components/Movies/SpinnerWrapper';\nimport seriesData from '../data/series.json';\nimport filmsData from '../data/films.json';\n\nconst VideoBackground = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"./video.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      style: {\n        backgroundColor: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is some sample text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n/*---> Component <---*/\n\n\n_c = VideoBackground;\n\nconst BrowsePage = () => {\n  _s();\n\n  let series = seriesData;\n  series = [{\n    title: 'Documentaries',\n    data: series.filter(item => item.genre === 'documentaries')\n  }, {\n    title: 'Comedies',\n    data: series.filter(item => item.genre === 'comedies')\n  }, {\n    title: 'Children',\n    data: series.filter(item => item.genre === 'children')\n  }, {\n    title: 'Crime',\n    data: series.filter(item => item.genre === 'crime')\n  }, {\n    title: 'Feel-Good',\n    data: series.filter(item => item.genre === 'feel-good')\n  }];\n  console.log('series2', series);\n  let films = filmsData;\n  films = [{\n    title: 'Drama',\n    data: films.filter(item => item.genre === 'drama')\n  }, {\n    title: 'Thriller',\n    data: films.filter(item => item.genre === 'thriller')\n  }, {\n    title: 'Children',\n    data: films.filter(item => item.genre === 'children')\n  }, {\n    title: 'Suspense',\n    data: films.filter(item => item.genre === 'suspense')\n  }, {\n    title: 'Romance',\n    data: films.filter(item => item.genre === 'romance')\n  }];\n  const [category, setCategory] = useState('films');\n  const currentCategory = category === 'films' ? films : series;\n  const [showCardFeature, setShowCardFeature] = useState(false);\n  const [activeItem, setActiveItem] = useState({});\n  const [showPlayer, setShowPlayer] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const handleFilmsClick = () => {\n    setCategory('films');\n    const element = document.getElementById('movies');\n    element === null || element === void 0 ? void 0 : element.scrollIntoView();\n  };\n\n  const handleSeriesClick = () => {\n    setCategory('series');\n    const element = document.getElementById('movies');\n    element === null || element === void 0 ? void 0 : element.scrollIntoView();\n  };\n\n  useEffect(() => {\n    if (series[0].data.length > 1) {\n      setLoading(false);\n    }\n  }, [series]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"ThreeDots\",\n        color: \"white\",\n        height: 100,\n        width: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(VideoBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BrowseHeaderWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(BrowseNavbar, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderLink, {\n          onClick: handleFilmsClick,\n          children: \"Films\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderLink, {\n          onClick: handleSeriesClick,\n          children: \"Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FeatureWrapperBrowse, {\n        children: [/*#__PURE__*/_jsxDEV(FeatureTitleBrowse, {\n          children: \"Watch Patman Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeatureSubTitleBrowse, {\n          children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks, the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he is part of the world around him.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n          onClick: () => setShowPlayer(true),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), showPlayer ? /*#__PURE__*/_jsxDEV(PlayerOverlay, {\n          onClick: () => setShowPlayer(false),\n          children: /*#__PURE__*/_jsxDEV(PlayerVideo, {\n            src: \"./video.mp4\",\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllSlidesWrapper, {\n      id: \"movies\",\n      children: currentCategory.map(slideItem => {\n        var _slideItem$title, _slideItem$data, _slideItem$title2;\n\n        return /*#__PURE__*/_jsxDEV(SlideWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(SlideTitle, {\n            children: slideItem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AllCardsWrapper, {\n            children: (_slideItem$data = slideItem.data) === null || _slideItem$data === void 0 ? void 0 : _slideItem$data.map(cardItem => /*#__PURE__*/_jsxDEV(CardWrapper, {\n              children: /*#__PURE__*/_jsxDEV(CardImage, {\n                onClick: () => {\n                  setShowCardFeature(true);\n                  setActiveItem(cardItem);\n                },\n                src: `../images/${category}/${cardItem.genre}/${cardItem.slug}/small.jpg`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, cardItem.docId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), showCardFeature && ((_slideItem$title2 = slideItem.title) === null || _slideItem$title2 === void 0 ? void 0 : _slideItem$title2.toLowerCase()) === activeItem.genre ? /*#__PURE__*/_jsxDEV(CardFeatureWrapper, {\n            style: {\n              backgroundImage: `url(../images/${category}/${activeItem.genre}/${activeItem.slug}/large.jpg)`\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              children: activeItem.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n              children: activeItem.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardFeatureClose, {\n              onClick: () => setShowCardFeature(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n              onClick: () => setShowPlayer(true),\n              children: \"Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), showPlayer ? /*#__PURE__*/_jsxDEV(PlayerOverlay, {\n              onClick: () => setShowPlayer(false),\n              children: /*#__PURE__*/_jsxDEV(PlayerVideo, {\n                src: \"../videos/video.mp4\",\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this) : null]\n        }, `${category}-${(_slideItem$title = slideItem.title) === null || _slideItem$title === void 0 ? void 0 : _slideItem$title.toLowerCase()}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterCompound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BrowsePage, \"nCTQLnXMhDwzBdeV99FwHJ4U6eg=\");\n\n_c2 = BrowsePage;\nexport default BrowsePage;\n/*---> Interfaces <---*/\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoBackground\");\n$RefreshReg$(_c2, \"BrowsePage\");","map":{"version":3,"sources":["/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/pages/BrowsePage.tsx"],"names":["React","useState","useEffect","BrowseHeaderWrapper","BrowseNavbar","Logo","FeatureWrapperBrowse","FeatureTitleBrowse","FeatureSubTitleBrowse","PlayButton","HeaderLink","AllSlidesWrapper","SlideWrapper","SlideTitle","AllCardsWrapper","CardWrapper","CardImage","CardTitle","CardDescription","CardFeatureWrapper","CardFeatureClose","PlayerVideo","PlayerOverlay","FooterCompound","Loader","SpinnerWrapper","seriesData","filmsData","VideoBackground","backgroundColor","BrowsePage","series","title","data","filter","item","genre","console","log","films","category","setCategory","currentCategory","showCardFeature","setShowCardFeature","activeItem","setActiveItem","showPlayer","setShowPlayer","loading","setLoading","handleFilmsClick","element","document","getElementById","scrollIntoView","handleSeriesClick","length","map","slideItem","cardItem","slug","docId","toLowerCase","backgroundImage","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BrowseHeaderWrapper from '../components/Header/BrowseHeaderWrapper'\nimport BrowseNavbar from '../components/Header/BrowseNavbar'\nimport Logo from '../components/Header/Logo'\nimport FeatureWrapperBrowse from '../components/Feature/FeatureWrapperBrowse'\nimport FeatureTitleBrowse from '../components/Feature/FeatureTitleBrowse'\nimport FeatureSubTitleBrowse from '../components/Feature/FeatureSubTitleBrowse'\nimport PlayButton from '../components/Header/PlayButton'\nimport HeaderLink from '../components/Header/HeaderLink'\nimport AllSlidesWrapper from '../components/Movies/AllSlidesWrapper'\nimport SlideWrapper from '../components/Movies/SlideWrapper'\nimport SlideTitle from '../components/Movies/SlideTitle'\nimport AllCardsWrapper from '../components/Movies/AllCardsWrapper'\nimport CardWrapper from '../components/Movies/CardWrapper'\nimport CardImage from '../components/Movies/CardImage'\nimport CardTitle from '../components/Movies/CardTitle'\nimport CardDescription from '../components/Movies/CardDescription'\nimport CardFeatureWrapper from '../components/Movies/CardFeatureWrapper'\nimport CardFeatureClose from '../components/Movies/CardFeatureClose'\nimport PlayerVideo from '../components/Movies/PlayerVideo'\nimport PlayerOverlay from '../components/Movies/PlayerOverlay'\nimport FooterCompound from '../compounds/FooterCompound'\nimport Loader from 'react-loader-spinner'\nimport SpinnerWrapper from '../components/Movies/SpinnerWrapper'\nimport seriesData from '../data/series.json'\nimport filmsData from '../data/films.json'\n\nconst VideoBackground = () => {\n  return (\n    <div className=\"video-background\">\n      <video autoPlay muted loop>\n        <source src=\"./video.mp4\" type=\"video/mp4\" />\n      </video>\n      <div className=\"content\" style={{backgroundColor:'red'}}>\n        <h1>Hello, world!</h1>\n        <p>This is some sample text.</p>\n      </div>\n    </div>\n  );\n};\n\n/*---> Component <---*/\nconst BrowsePage = () => {\n  let series: MovieType[] = seriesData\n  series = [\n    {\n      title: 'Documentaries',\n      data: series.filter((item) => item.genre === 'documentaries'),\n    },\n    {\n      title: 'Comedies',\n      data: series.filter((item) => item.genre === 'comedies'),\n    },\n    {\n      title: 'Children',\n      data: series.filter((item) => item.genre === 'children'),\n    },\n    {\n      title: 'Crime',\n      data: series.filter((item) => item.genre === 'crime'),\n    },\n    {\n      title: 'Feel-Good',\n      data: series.filter((item) => item.genre === 'feel-good'),\n    },\n  ]\n  console.log('series2', series)\n\n  let films: MovieType[] = filmsData\n  films = [\n    {\n      title: 'Drama',\n      data: films.filter((item) => item.genre === 'drama'),\n    },\n    {\n      title: 'Thriller',\n      data: films.filter((item) => item.genre === 'thriller'),\n    },\n    {\n      title: 'Children',\n      data: films.filter((item) => item.genre === 'children'),\n    },\n    {\n      title: 'Suspense',\n      data: films.filter((item) => item.genre === 'suspense'),\n    },\n    {\n      title: 'Romance',\n      data: films.filter((item) => item.genre === 'romance'),\n    },\n  ]\n\n  const [category, setCategory] = useState('films')\n  const currentCategory = category === 'films' ? films : series\n  const [showCardFeature, setShowCardFeature] = useState(false)\n  const [activeItem, setActiveItem] = useState<MovieType>({})\n  const [showPlayer, setShowPlayer] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  const handleFilmsClick = () => {\n    setCategory('films')\n    const element = document.getElementById('movies')\n    element?.scrollIntoView()\n  }\n\n  const handleSeriesClick = () => {\n    setCategory('series')\n    const element = document.getElementById('movies')\n    element?.scrollIntoView()\n  }\n\n  useEffect(() => {\n    if (series[0].data!.length > 1) {\n      setLoading(false)\n    }\n  }, [series])\n\n  if (loading) {\n    return (\n      <SpinnerWrapper>\n        <Loader type='ThreeDots' color='white' height={100} width={100} />\n      </SpinnerWrapper>\n    )\n  }\n\n  return (\n    <>\n    <VideoBackground/>\n      <BrowseHeaderWrapper>\n        <BrowseNavbar>\n          <Logo />\n          <HeaderLink onClick={handleFilmsClick}>Films</HeaderLink>\n          <HeaderLink onClick={handleSeriesClick}>Series</HeaderLink>\n        </BrowseNavbar>\n        <FeatureWrapperBrowse>\n          <FeatureTitleBrowse>Watch Patman Now</FeatureTitleBrowse>\n          <FeatureSubTitleBrowse>\n            Forever alone in a crowd, failed comedian Arthur Fleck seeks\n            connection as he walks the streets of Gotham City. Arthur wears two\n            masks, the one he paints for his day job as a clown, and the guise\n            he projects in a futile attempt to feel like he is part of the world\n            around him.\n          </FeatureSubTitleBrowse>\n          <PlayButton onClick={() => setShowPlayer(true)}>Play</PlayButton>\n          {showPlayer ? (\n            <PlayerOverlay onClick={() => setShowPlayer(false)}>\n              <PlayerVideo src='./video.mp4' type='video/mp4' />\n            </PlayerOverlay>\n          ) : null}\n        </FeatureWrapperBrowse>\n      </BrowseHeaderWrapper>\n\n      <AllSlidesWrapper id='movies'>\n        {currentCategory.map((slideItem) => (\n          <SlideWrapper key={`${category}-${slideItem.title?.toLowerCase()}`}>\n            <SlideTitle>{slideItem.title!}</SlideTitle>\n            <AllCardsWrapper>\n              {slideItem.data?.map((cardItem) => (\n                <CardWrapper key={cardItem.docId!}>\n                  <CardImage\n                    onClick={() => {\n                      setShowCardFeature(true)\n                      setActiveItem(cardItem)\n                    }}\n                    src={`../images/${category}/${cardItem.genre}/${cardItem.slug}/small.jpg`}\n                  />\n                </CardWrapper>\n              ))}\n            </AllCardsWrapper>\n            {showCardFeature &&\n            slideItem.title?.toLowerCase() === activeItem.genre ? (\n              <CardFeatureWrapper\n                style={{\n                  backgroundImage: `url(../images/${category}/${activeItem.genre}/${activeItem.slug}/large.jpg)`,\n                }}\n              >\n                <CardTitle>{activeItem.title!}</CardTitle>\n                <CardDescription>{activeItem.description!}</CardDescription>\n                <CardFeatureClose onClick={() => setShowCardFeature(false)} />\n                <PlayButton onClick={() => setShowPlayer(true)}>\n                  Play\n                </PlayButton>\n                {showPlayer ? (\n                  <PlayerOverlay onClick={() => setShowPlayer(false)}>\n                    <PlayerVideo src='../videos/video.mp4' type='video/mp4' />\n                  </PlayerOverlay>\n                ) : null}\n              </CardFeatureWrapper>\n            ) : null}\n          </SlideWrapper>\n        ))}\n      </AllSlidesWrapper>\n      <FooterCompound />\n    </>\n  )\n}\n\nexport default BrowsePage\n\n/*---> Interfaces <---*/\ninterface MovieType {\n  description?: string\n  docId?: string\n  genre?: string\n  id?: string\n  maturity?: string\n  slug?: string\n  title?: string\n  data?: MovieType[]\n}\n"]},"metadata":{},"sourceType":"module"}