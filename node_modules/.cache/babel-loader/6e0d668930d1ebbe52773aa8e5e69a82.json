{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/components/Accordion/AccordionBody.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport AccordionContext from './AccordionContext';\nimport styled from 'styled-components';\n/*---> Component <---*/\n\nconst AccordionBody = ({\n  children\n}) => {\n  _s();\n\n  const accordionContextValue = useContext(AccordionContext);\n  return accordionContextValue.AccordionShow ? /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this) : null;\n};\n/*---> Styles <---*/\n\n\n_s(AccordionBody, \"5Pt9E8D+7OHlY3JeRuRSTkHFEMg=\");\n\n_c = AccordionBody;\nexport const Wrapper = styled.div`\n  background: #303030;\n  font-size: 26px;\n  font-weight: normal;\n  padding: 0.8em 1.2em 0.8em 1.2em;\n\n  @media (max-width: 550px) {\n    font-size: 20px;\n  }\n`;\n/*---> Interfaces <---*/\n\n_c2 = Wrapper;\nexport default AccordionBody;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccordionBody\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/components/Accordion/AccordionBody.tsx"],"names":["React","useContext","AccordionContext","styled","AccordionBody","children","accordionContextValue","AccordionShow","Wrapper","div"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACjD,QAAMC,qBAAqB,GAAGL,UAAU,CAACC,gBAAD,CAAxC;AAEA,SAAOI,qBAAqB,CAAEC,aAAvB,gBACL,QAAC,OAAD;AAAA,cAAUF;AAAV;AAAA;AAAA;AAAA;AAAA,UADK,GAEH,IAFJ;AAGD,CAND;AAQA;;;GARMD,a;;KAAAA,a;AASN,OAAO,MAAMI,OAAO,GAAGL,MAAM,CAACM,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO;AAWP;;MAXaD,O;AAgBb,eAAeJ,aAAf","sourcesContent":["import React, { useContext } from 'react'\nimport AccordionContext from './AccordionContext'\nimport styled from 'styled-components'\n\n/*---> Component <---*/\nconst AccordionBody = ({ children }: PropsType) => {\n  const accordionContextValue = useContext(AccordionContext)\n\n  return accordionContextValue!.AccordionShow ? (\n    <Wrapper>{children}</Wrapper>\n  ) : null\n}\n\n/*---> Styles <---*/\nexport const Wrapper = styled.div`\n  background: #303030;\n  font-size: 26px;\n  font-weight: normal;\n  padding: 0.8em 1.2em 0.8em 1.2em;\n\n  @media (max-width: 550px) {\n    font-size: 20px;\n  }\n`\n\n/*---> Interfaces <---*/\ninterface PropsType {\n  children?: string\n}\n\nexport default AccordionBody\n"]},"metadata":{},"sourceType":"module"}