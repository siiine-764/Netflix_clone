{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/components/Accordion/AccordionHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport AccordionContext from './AccordionContext';\nimport styled from 'styled-components';\n/*---> Component <---*/\n\nconst AccordionHeader = ({\n  children\n}) => {\n  _s();\n\n  const accordionContextValue = useContext(AccordionContext);\n\n  const handleClick = () => {\n    accordionContextValue === null || accordionContextValue === void 0 ? void 0 : accordionContextValue.setAccordionShow(!accordionContextValue.AccordionShow);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    onClick: handleClick,\n    children: [children, (accordionContextValue === null || accordionContextValue === void 0 ? void 0 : accordionContextValue.AccordionShow) ? /*#__PURE__*/_jsxDEV(Image, {\n      src: \"../images/icons/close-slim.png\",\n      alt: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Image, {\n      src: \"../images/icons/add.png\",\n      alt: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n/*---> Styles <---*/\n\n\n_s(AccordionHeader, \"5Pt9E8D+7OHlY3JeRuRSTkHFEMg=\");\n\n_c = AccordionHeader;\nexport const Wrapper = styled.div`\n  background: #303030;\n  font-size: 26px;\n  font-weight: normal;\n  padding: 0.8em 1.2em 0.8em 1.2em;\n  margin-bottom: 1px;\n  cursor: pointer;\n\n  @media (max-width: 550px) {\n    font-size: 20px;\n  }\n`;\n_c2 = Wrapper;\nexport const Image = styled.img`\n  filter: brightness(0) invert(1);\n  width: 24px;\n  float: right;\n\n  img::hover {\n    background: #303030;\n  }\n\n  @media (max-width: 550px) {\n    width: 16px;\n  }\n`;\n/*---> Interfaces <---*/\n\n_c3 = Image;\nexport default AccordionHeader;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AccordionHeader\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Image\");","map":{"version":3,"sources":["/Users/mayache-/Desktop/React-TypeScript-Netflix-Clone/src/components/Accordion/AccordionHeader.tsx"],"names":["React","useContext","AccordionContext","styled","AccordionHeader","children","accordionContextValue","handleClick","setAccordionShow","AccordionShow","Wrapper","div","Image","img"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAAA;;AACpD,QAAMC,qBAAqB,GAAGL,UAAU,CAACC,gBAAD,CAAxC;;AAEC,QAAMK,WAAW,GAAG,MAAM;AACxBD,IAAAA,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEE,gBAAvB,CACE,CAACF,qBAAqB,CAACG,aADzB;AAGD,GAJD;;AAMA,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEF,WAAlB;AAAA,eACGF,QADH,EAEG,CAAAC,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEG,aAAvB,iBACC,QAAC,KAAD;AAAO,MAAA,GAAG,EAAC,gCAAX;AAA4C,MAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,KAAD;AAAO,MAAA,GAAG,EAAC,yBAAX;AAAqC,MAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;AAqBA;;;GArBML,e;;KAAAA,e;AAsBN,OAAO,MAAMM,OAAO,GAAGP,MAAM,CAACQ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXO;MAAMD,O;AAab,OAAO,MAAME,KAAK,GAAGT,MAAM,CAACU,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAcP;;MAdaD,K;AAmBb,eAAeR,eAAf","sourcesContent":["import React, { useContext } from 'react'\nimport AccordionContext from './AccordionContext'\nimport styled from 'styled-components'\n\n/*---> Component <---*/\nconst AccordionHeader = ({ children }: PropsType) => {\n\tconst accordionContextValue = useContext(AccordionContext)\n\n  const handleClick = () => {\n    accordionContextValue?.setAccordionShow(\n      !accordionContextValue.AccordionShow\n    )\n  }\n\n  return (\n    <Wrapper onClick={handleClick}>\n      {children}\n      {accordionContextValue?.AccordionShow ? (\n        <Image src='../images/icons/close-slim.png' alt='Close' />\n      ) : (\n        <Image src='../images/icons/add.png' alt='Open' />\n      )}\n    </Wrapper>\n  )\n}\n\n/*---> Styles <---*/\nexport const Wrapper = styled.div`\n  background: #303030;\n  font-size: 26px;\n  font-weight: normal;\n  padding: 0.8em 1.2em 0.8em 1.2em;\n  margin-bottom: 1px;\n  cursor: pointer;\n\n  @media (max-width: 550px) {\n    font-size: 20px;\n  }\n`\n\nexport const Image = styled.img`\n  filter: brightness(0) invert(1);\n  width: 24px;\n  float: right;\n\n  img::hover {\n    background: #303030;\n  }\n\n  @media (max-width: 550px) {\n    width: 16px;\n  }\n`\n\n/*---> Interfaces <---*/\ninterface PropsType {\n  children?: string\n}\n\nexport default AccordionHeader\n"]},"metadata":{},"sourceType":"module"}